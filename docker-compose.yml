services:
  # Frontend Service
  frontend:
    build: 
      context: ./services/frontend
      args:
        - REACT_APP_API_GATEWAY_URL=http://localhost:8000
        - REACT_APP_WS_URL=ws://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - api-gateway

  # API Gateway
  api-gateway:
    build: ./services/api-gateway
    ports:
      - "8000:8000"
    environment:
      AUTH_SERVICE_URL: http://auth-service:3001
      AI_SERVICE_URL: http://ai-service:8001
      DATABASE_SERVICE_URL: http://database-service:3003
      JWT_SECRET: your-jwt-secret-key
      REDIS_URL: redis://redis:6379
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USER: yaramyaswanthkumar@gmail.com
      SMTP_PASS: "${SMTP_PASS}"
      CONTACT_RECIPIENT_EMAIL: yaramyaswanthkumar@gmail.com
      CONTACT_FROM_EMAIL: "AI Code Platform <yaramyaswanthkumar@gmail.com>"
    depends_on:
      - auth-service
      - ai-service
      - database-service
      - redis
    volumes:
      - user_workspaces:/workspaces

  # Auth Service
  auth-service:
    build: ./services/auth-service
    ports:
      - "3001:3001"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=ai_platform
      - JWT_SECRET=your-jwt-secret-key
      - JWT_EXPIRES_IN=24h
      - BCRYPT_ROUNDS=12
      - CORS_ORIGIN=http://localhost:3000
      - LOG_LEVEL=info
      - NODE_ENV=development
      - FRONTEND_URL=http://localhost:3000
      - DATABASE_SERVICE_URL=http://database-service:3003
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USER=yaramyaswanthkumar@gmail.com
      - SMTP_PASS=${SMTP_PASS}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GITHUB_APP_NAME=${GITHUB_APP_NAME}
      - GITHUB_APP_ID=${GITHUB_APP_ID}
      - GITHUB_PRIVATE_KEY=${GITHUB_PRIVATE_KEY}
    depends_on:
      - mysql
      - database-service

  # AI/Inference Service
  ai-service:
    build: ./services/ai-service
    container_name: ai-app-builder-ai-service-new
    ports:
      - "8001:8001"
    environment:
      - DATABASE_SERVICE_URL=http://database-service:3003
      - CHROMADB_HOST=chromadb
      - CHROMADB_PORT=8002
    depends_on:
      - database-service
      - chromadb
    volumes:
      - ./tmp:/tmp
      - user_workspaces:/workspaces

  # Database Service (API layer for MySQL)
  database-service:
    build: ./services/database-service
    ports:
      - "3003:3003"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=ai_platform
      - CHROMADB_HOST=chromadb
      - CHROMADB_PORT=8002
      - CORS_ORIGIN=http://localhost:3000
      - LOG_LEVEL=info
      - NODE_ENV=development
    depends_on:
      - mysql
      - chromadb
    volumes:
      - user_workspaces:/workspaces

  # MySQL Database
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=ai_platform
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./services/database-service/init.sql:/docker-entrypoint-initdb.d/init.sql

  # ChromaDB for Vector Storage
  chromadb:
    image: chromadb/chroma:latest
    ports:
      - "8002:8000"
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    volumes:
      - chromadb_data:/chroma/chroma

  # Redis for Caching and Session Storage
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data



  # Terminal Service - Simple command execution with Git integration
  terminal-service:
    build: ./services/terminal-service
    ports:
      - "3004:3004"
    volumes:
      - user_workspaces:/workspaces
      - ~/.ssh:/root/.ssh:ro  # For Git SSH keys if needed
    environment:
      - NODE_ENV=development
      - GIT_CONFIG_GLOBAL=/tmp/.gitconfig
    depends_on:
      - database-service

volumes:
  mysql_data:
  chromadb_data:
  redis_data:
  user_workspaces:

networks:
  default:
    driver: bridge
